name: Test Deployment Using Docker Image

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  deploy-using-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Stop Existing Containers on Port 3002
        run: |
          CONTAINER_ID=$(docker ps -q --filter "publish=3002")
          if [ ! -z "$CONTAINER_ID" ]; then
            echo "⚠️ Stopping existing container running on port 3002..."
            docker stop "$CONTAINER_ID"
            docker rm "$CONTAINER_ID"
          fi

      - name: Pull & Run Docker Image
        run: |
          echo "Pulling latest Docker image from Docker Hub..."
          docker pull noletengine/npm-motivation:latest

          echo "Running container..."
          docker run -d --name npm-motivation-test -p 3002:3000 noletengine/npm-motivation:latest

      - name: Install & Start `ngrok`
        run: |
          echo "Installing ngrok..."
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok -y

          echo "Authenticating ngrok..."
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

          echo "Starting ngrok tunnel..."
          nohup ngrok http 3002 > ngrok.log 2>&1 &

      - name: Get Public URL
        run: |
          echo "Waiting for ngrok to initialize..."
          sleep 10  # Give ngrok time to start

          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "✅ Your application is accessible at: $NGROK_URL"

